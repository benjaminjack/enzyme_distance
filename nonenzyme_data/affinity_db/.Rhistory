install.packages("devtools")
install.packages("ggplot2")
setwd('Downloads/')
library(readr)
prots <- read_csv("affinity.tsv")
prots <- read_delim("affinity.tsv", "\t")
prots <- read_delim("affinity.tsv", "\t", skip = 1)
View(prots)
library(stringr)
prots2 <- filter(prots, str_detect(Type, "^O"))
prots2 <- filter(prots, str_detect(Type, "^O") == T)
prots$Type
prots2 <- filter(prots, str_match(Type, "^O"))
prots2 <- filter(prots, str_match(`Type`, "^O"))
library(dplyr)
library(plyr)
library(dplyr)
library(tidyr)
prots2 <- filter(prots, str_match(Type, "^O"))
prots2 <- rename(prots, unbound_pdb_1 = `Unbound PDB`)
prots2 <- rename(prots, unbound_pdb_1 = `Unbound PDB`)
detach("package:plyr", unload=TRUE)
library(dplyr)
prots2 <- rename(prots, unbound_pdb_1 = `Unbound PDB`)
select(prots, `Complex PDB`, `Type`)
names(prots)[3] <- "unbound_pdb1"
names(prots)[5] <- "unbound_pdb2"
prots2 <- filter(prots, str_match(Type, "^O"))
prots2 <- filter(prots, str_match(`Type`, "^O"))
prots2 <- filter(prots, str_match(`Type`, "^O") == T)
prots2 <- filter(prots, str_detect(`Type`, "^O"))
View(prots2)
prots2 <- %>% mutate(pdb = str_extract(`Complex PDB`, "^([A-Z0-9]{4})")[1])
prots2 <- mutate(prots2, pdb = str_extract(`Complex PDB`, "^([A-Z0-9]{4})")[1])
prots2 <- mutate(prots2, pdb = str_extract(`Complex PDB`, "^([A-Z0-9]{4})")[2])
prots2 <- mutate(prots2, pdb = str_extract(`Complex PDB`, "^([A-Z0-9]{4})")[1])
prots2 <- mutate(prots2, pdb = str_extract(`Complex PDB`, "^([A-Z0-9]{4})"))
prots2$pdb
View(prots)
prots3 <- gather(prots, partner, partner_pdb, unbound_pdb1, unbound_pdb2)
View(prots3)
prots1 <- read_delim("affinity-1.tsv", "\t", skip = 1) # Affinity DB 1.0
prots2 <- read_delim("affinity-2.tsv", "\t", skip = 1) # Affinity DB 2.0
rm(list = ls())
library(dplyr)
library(tidyr)
library(readr)
library(stringr)
prots1 <- read_delim("affinity-1.tsv", "\t", skip = 1) # Affinity DB 1.0
prots2 <- read_delim("affinity-2.tsv", "\t", skip = 1) # Affinity DB 2.0
# Correct duplicate column names
names(prots1)[3] <- "pdb1"
names(prots1)[5] <- "pdb2"
names(prots2)[3] <- "pdb1"
names(prots2)[5] <- "pdb2"
# Bind data frames togther
all_prots <- bind_rows(prots1, prots2)
rm(list = ls())
library(dplyr)
library(tidyr)
library(readr)
library(stringr)
prots1 <- read_delim("affinity-1.tsv", "\t", skip = 1) # Affinity DB 1.0
prots2 <- read_delim("affinity-2.tsv", "\t", skip = 1) # Affinity DB 2.0
# Correct duplicate column names
names(prots1)[3] <- "pdb1"
names(prots1)[5] <- "pdb2"
names(prots2)[3] <- "pdb1"
names(prots2)[5] <- "pdb2"
# Select columns of interest
prots1 <- select(prots1, `Complex PDB`, Type, pdb1, pdb2)
prots2 <- select(prots2, `Complex PDB`, Type, pdb1, pdb2)
# Bind data frames togther
all_prots <- bind_rows(prots1, prots2)
View(all_prots)
source('~/Box Sync/projects/2015/enzyme_distance/scripts/R/clean_affinity_db.R')
View(all_prots)
all_prots <- filter(all_prots, str_detect(Type, "^O"))
View(all_prots)
setwd('/Users/ben/Box\ Sync/projects/2015/enzyme_distance/data/nonenzymes/affinity_db')
source('~/Box Sync/projects/2015/enzyme_distance/scripts/R/clean_affinity_db.R')
library(read.xl)
library("readxl")
read.xl("affinity_db_clean_annot.xls")
read_xl("affinity_db_clean_annot.xls")
new_prots <- read_csv("affinity_db_clean_annot.csv")
View(new_prots)
new_prots <- filter(new_prots, candidate == 1)
new_prots <- select(new_prots, complex_pdb, complex_chain)
group_by(new_prots, complex_pdb) %>% mutate(parent_protein = row_number())
group_by(new_prots, complex_pdb) %>% mutate(parent_protein = row_number()) -> new_prots
?separate
separate(new_prots, complex_chain)
separate(new_prots, complex_chain, c("chain1", "chain2", "chain3", "chain4"))
separate(new_prots, complex_chain, c("chain1", "chain2", "chain3", "chain4"), sep = "")
separate(new_prots, complex_chain, c("chain1", "chain2", "chain3", "chain4"), split="")
separate(new_prots, complex_pdb, c("pdb", "interaction"), sep = "_")
separate(new_prots, complex_pdb, c("pdb", "interaction"), sep = "_") -> new_prots
write_csv(new_prots, "prot_list_final.csv")
unnest(new_prots, complex_chain)
mutate(new_prots, complex_chain = strsplit(complex_chain, split=""))
mutate(new_prots, complex_chain = strsplit(complex_chain, split="")) %>% unnest(complex_chain)
mutate(new_prots, complex_chain = strsplit(complex_chain, split="")) %>% unnest(complex_chain) -> new_prots
write_csv(new_prots, "prot_list_final.csv")
new_prots$pdb
str(new_prots$pdb)
new_prots$pdb
new_prots2 <- df(tolower(new_prots$pdb),complex_chain)
new_prots2 <- df(tolower(new_prots$pdb),new_prots$complex_chain)
new_prots2 <- data.frame(tolower(new_prots$pdb),new_prots$complex_chain)
View(new_prots2)
new_prots2 <- mutate(new_prots2, tolower.new_prots.pdb.=paste(tolower.new_prots.pdb., ".pdb", ""))
new_prots2 <- data.frame(tolower(new_prots$pdb),new_prots$complex_chain)
new_prots2 <- mutate(new_prots2, tolower.new_prots.pdb.=paste0(tolower.new_prots.pdb., ".pdb"))
write_delim(new_prots2, "prot_list.txt")
